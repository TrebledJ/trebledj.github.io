
# Build (without deploying) an Eleventy site for CI testing.
# Useful for testing PRs and branches.
# See deploy.yml for a build + deploy to GitHub Pages workflow.
name: Dry Run Build

on:
  # Runs on pushes targeting the default branch
  push:
    # branches: master
    paths:
      - '**'
      - '!.gitignore'
      - '!*.md'
      - '!LICENSE'
      - '!.eslintignore'
      - '!.eslintrc.yml'
      - '!.github/**'
      - '!.lycheeignore'
      - '!.vscode/**'
      - '!archive/**'
      - '!scripts/**'
      - '!ust/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all commit history.

      - name: Detect Package Manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine packager manager" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .cache
            .eleventy/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-eleventy-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-eleventy-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install Dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build
        run:
          echo "## Build Output"
          echo "```" >>$GITHUB_STEP_SUMMARY
          ${{ steps.detect-package-manager.outputs.manager }} run prod >>$GITHUB_STEP_SUMMARY
          echo "```" >>$GITHUB_STEP_SUMMARY
